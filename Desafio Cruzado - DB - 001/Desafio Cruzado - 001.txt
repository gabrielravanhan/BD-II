-Case: Padaria
-Integrantes: André Luís Moreira, Carlos Gabriel da Cruz Moreno, Gabriel José Soto Ravanhan e Luiz Felipe da Silva D'Avila

-Script de criação do Banco de Dados:

CREATE DATABASE padaria;

USE padaria;

CREATE TABLE estados(
	id_estado INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(191) NOT NULL,
	sigla CHAR(2)
);

CREATE TABLE cidades(
	id_cidade INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(191) NOT NULL,
	estado_id INT UNSIGNED NOT NULL
);

CREATE TABLE clientes(
	id_cliente INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(191) NOT NULL,
	cpf VARCHAR(12) NOT NULL UNIQUE,
	data_nascimento DATE NOT NULL,
	celular VARCHAR(12),
	sexo CHAR(1) NOT NULL,
	rua VARCHAR(191) NOT NULL,
	numero VARCHAR(6) NOT NULL,
	bairro VARCHAR(191) NOT NULL,
	cidade_id INT UNSIGNED NOT NULL
);

CREATE TABLE fornecedores(
	id_fornecedor INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(191) NOT NULL,
	cnpj VARCHAR(14) NOT NULL UNIQUE,
	email VARCHAR(191),
	rua VARCHAR(191) NOT NULL,
	numero VARCHAR(6) NOT NULL,
	bairro VARCHAR(191) NOT NULL,
	cidade_id INT UNSIGNED NOT NULL
);

CREATE TABLE produtos(
	id_produto INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(191) NOT NULL,
	preco DECIMAL(14,2) NOT NULL,
	quantidade DOUBLE,
	unidade VARCHAR(5)
);

CREATE TABLE vendas(
	id_venda INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	cliente_id INT UNSIGNED NOT NULL,
	numero_fiscal INT NOT NULL,
	data_hora_emissao DATETIME NOT NULL
);

CREATE TABLE produtos_vendas(
	id_produto_venda INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	produto_id INT UNSIGNED NOT NULL,
	venda_id INT UNSIGNED NOT NULL
);

CREATE TABLE fornecedores_produtos(
	id_fornecedor_produto INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	fornecedor_id INT UNSIGNED NOT NULL,
	produto_id INT UNSIGNED NOT NULL,
	preco DECIMAL(14,2)
);

ALTER TABLE cidades ADD CONSTRAINT fk_estado_cidade
	FOREIGN KEY (estado_id) REFERENCES estados (id_estado);

ALTER TABLE clientes ADD CONSTRAINT fk_cidade_cliente
	FOREIGN KEY (cidade_id) REFERENCES cidades (id_cidade);

ALTER TABLE fornecedores ADD CONSTRAINT fk_cidade_fornecedor
	FOREIGN KEY (cidade_id) REFERENCES cidades (id_cidade);

ALTER TABLE vendas ADD CONSTRAINT fk_cliente_venda
	FOREIGN KEY (cliente_id) REFERENCES clientes (id_cliente);
    
ALTER TABLE produtos_vendas ADD CONSTRAINT fk_venda_produto_venda
	FOREIGN KEY (venda_id) REFERENCES vendas (id_venda);

ALTER TABLE produtos_vendas ADD CONSTRAINT fk_produto_produto_venda
	FOREIGN KEY (produto_id) REFERENCES produtos (id_produto);

ALTER TABLE fornecedores_produtos ADD CONSTRAINT fk_fornecedor_fornecedor_produto
	FOREIGN KEY (fornecedor_id) REFERENCES fornecedores (id_fornecedor);

ALTER TABLE fornecedores_produtos ADD CONSTRAINT fk_produto_fornecedor_produto
	FOREIGN KEY (produto_id) REFERENCES produtos (id_produto);
	
-Relatórios solicitados

1) Consulta de fornecedores com os campos “nome do fornecedor, CNPJ do fornecedor, rua do fornecedor, número do fornecedor, bairro do fornecedor, cidade do fornecedor, estado do fornecedor e quantidade de produtos fornecidos”. 

2) Consulta de clientes com os campos “nome do cliente, CPF do cliente, sexo do cliente, número do celular do cliente, cidade do cliente, estado do cliente e quantidade de vendas realizadas para este cliente. Esta consulta deverá trazer todos os clientes.

3) Consulta de cidades com os campos “nome da cidade, nome do estado da cidade, quantidade de clientes, quantidade de clientes homens, quantidade de clientes mulheres. Esta consulta deverá trazer todas as cidades.

4) Consulta de vendas com os campos “nome do cliente, número da nota fiscal, data e hora da emissão, valor total da compra, número total de produtos e valor médio por produto”.
 

-Resolução dos relatórios solicitados

-- 1)
SELECT forn.nome AS nome_fornecedor, forn.cnpj AS cnpj_fornecedor, forn.rua AS rua_fornecedor, forn.numero as numero_fornecedor, 
forn.bairro AS bairro_fornecedor, cida.nome AS cidade_fornecedor, esta.nome AS estado_fornecedor, COUNT(forn_prod.fornecedor_id)
AS quantidade_produtos_fornecidos
	FROM fornecedores forn
    INNER JOIN cidades cida
		ON forn.cidade_id = cida.id_cidade
	INNER JOIN estados esta
		ON cida.estado_id = esta.id_estado
	INNER JOIN fornecedores_produtos forn_prod
		ON forn.id_fornecedor = forn_prod.fornecedor_id
	GROUP BY forn.id_fornecedor, forn.cnpj, forn.rua, forn.numero, forn.bairro, cida.id_cidade, esta.id_estado;

-- 2)
SELECT clie.nome AS nome_cliente, clie.cpf AS cpf_cliente, clie.sexo AS sexo_cliente, clie.celular AS numero_celular_cliente, cida.nome AS cidade_cliente, 
esta.nome AS estado_cliente, COUNT(vend.id_venda) AS numero_vendas_realizadas_cliente
	FROM clientes clie
    LEFT JOIN cidades cida
		ON clie.cidade_id = cida.id_cidade
	INNER JOIN estados esta
		ON cida.estado_id = esta.id_estado
	LEFT JOIN vendas vend	
		ON clie.id_cliente = vend.cliente_id
	GROUP BY clie.id_cliente, clie.cpf, clie.sexo, clie.celular, cida.id_cidade, esta.id_estado;

-- 3)
SELECT cida.nome AS nome_cidade, esta.nome AS nome_estado_cidade, COUNT(clie.id_cliente) AS quantidade_clientes,
SUM(IF(clie.sexo = 'M', 1, 0)) AS quantidade_clientes_homens, SUM(IF(clie.sexo = 'F', 1, 0)) AS quantidade_clientes_mulheres
	FROM cidades cida
    LEFT JOIN estados esta
		ON cida.estado_id = esta.id_estado
	LEFT JOIN clientes clie
		ON cida.id_cidade = clie.cidade_id
	GROUP BY cida.id_cidade, esta.id_estado;

-- 4)
SELECT clie.nome AS nome_cliente, vend.numero_fiscal AS numero_nota_fiscal, vend.data_hora_emissao,
SUM(prod.preco) AS valor_total_compra, COUNT(prod.preco) AS numero_total_produtos, ROUND(avg(prod.preco), 2) AS valor_medio_produto
	FROM vendas vend
	INNER JOIN clientes clie
		ON vend.cliente_id = clie.id_cliente
	INNER JOIN produtos_vendas prod_vend
		ON vend.id_venda = prod_vend.venda_id
	INNER JOIN produtos prod
		ON prod_vend.produto_id = prod.id_produto
	GROUP BY clie.id_cliente, vend.numero_fiscal,  vend.data_hora_emissao;
